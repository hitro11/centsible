{
  "version": 3,
  "sources": ["../../../../../../../../node_modules/.pnpm/@angular+cdk@18.2.14_@angular+common@18.2.13_@angular+core@18.2.13_rxjs@7.8.1_zone.js@0.14.10_t3k6xxu4dovxyc5l37rae6qkbi/node_modules/@angular/cdk/fesm2022/listbox.mjs", "../../../../../../../../node_modules/.pnpm/@spartan-ng+ui-label-brain@0.0.1-alpha.356_@angular+common@18.2.13_@angular+core@18.2.13_rxjs_6a23flq7xskkenmxve2ea7favu/node_modules/@spartan-ng/ui-label-brain/fesm2022/spartan-ng-ui-label-brain.mjs", "../../../../../../../../node_modules/.pnpm/@spartan-ng+ui-select-brain@0.0.1-alpha.356_uvjgxynqjc7b7hin4ebxfjasda/node_modules/@spartan-ng/ui-select-brain/fesm2022/spartan-ng-ui-select-brain.mjs"],
  "sourcesContent": ["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { A, hasModifierKey, SPACE, ENTER, HOME, END, UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { signal, inject, ElementRef, booleanAttribute, Directive, Input, NgZone, ChangeDetectorRef, forwardRef, Output, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, defer, merge, fromEvent } from 'rxjs';\nimport { startWith, switchMap, map, takeUntil, filter } from 'rxjs/operators';\n\n/** The next id to use for creating unique DOM IDs. */\nlet nextId = 0;\n/**\n * An implementation of SelectionModel that internally always represents the selection as a\n * multi-selection. This is necessary so that we can recover the full selection if the user\n * switches the listbox from single-selection to multi-selection after initialization.\n *\n * This selection model may report multiple selected values, even if it is in single-selection\n * mode. It is up to the user (CdkListbox) to check for invalid selections.\n */\nclass ListboxSelectionModel extends SelectionModel {\n  constructor(multiple = false, initiallySelectedValues, emitChanges = true, compareWith) {\n    super(true, initiallySelectedValues, emitChanges, compareWith);\n    this.multiple = multiple;\n  }\n  isMultipleSelection() {\n    return this.multiple;\n  }\n  select(...values) {\n    // The super class is always in multi-selection mode, so we need to override the behavior if\n    // this selection model actually belongs to a single-selection listbox.\n    if (this.multiple) {\n      return super.select(...values);\n    } else {\n      return super.setSelection(...values);\n    }\n  }\n}\n/** A selectable option in a listbox. */\nclass CdkOption {\n  constructor() {\n    this._generatedId = `cdk-option-${nextId++}`;\n    this._disabled = signal(false);\n    this._enabledTabIndex = signal(undefined);\n    /** The option's host element */\n    this.element = inject(ElementRef).nativeElement;\n    /** The parent listbox this option belongs to. */\n    this.listbox = inject(CdkListbox);\n    /** Emits when the option is destroyed. */\n    this.destroyed = new Subject();\n    /** Emits when the option is clicked. */\n    this._clicked = new Subject();\n  }\n  /** The id of the option's host element. */\n  get id() {\n    return this._id || this._generatedId;\n  }\n  set id(value) {\n    this._id = value;\n  }\n  /** Whether this option is disabled. */\n  get disabled() {\n    return this.listbox.disabled || this._disabled();\n  }\n  set disabled(value) {\n    this._disabled.set(value);\n  }\n  /** The tabindex of the option when it is enabled. */\n  get enabledTabIndex() {\n    return this._enabledTabIndex() === undefined ? this.listbox.enabledTabIndex : this._enabledTabIndex();\n  }\n  set enabledTabIndex(value) {\n    this._enabledTabIndex.set(value);\n  }\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n  /** Whether this option is selected. */\n  isSelected() {\n    return this.listbox.isSelected(this);\n  }\n  /** Whether this option is active. */\n  isActive() {\n    return this.listbox.isActive(this);\n  }\n  /** Toggle the selected state of this option. */\n  toggle() {\n    this.listbox.toggle(this);\n  }\n  /** Select this option if it is not selected. */\n  select() {\n    this.listbox.select(this);\n  }\n  /** Deselect this option if it is selected. */\n  deselect() {\n    this.listbox.deselect(this);\n  }\n  /** Focus this option. */\n  focus() {\n    this.element.focus();\n  }\n  /** Get the label for this element which is required by the FocusableOption interface. */\n  getLabel() {\n    return (this.typeaheadLabel ?? this.element.textContent?.trim()) || '';\n  }\n  /**\n   * No-op implemented as a part of `Highlightable`.\n   * @docs-private\n   */\n  setActiveStyles() {\n    // If the listbox is using `aria-activedescendant` the option won't have focus so the\n    // browser won't scroll them into view automatically so we need to do it ourselves.\n    if (this.listbox.useActiveDescendant) {\n      this.element.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    }\n  }\n  /**\n   * No-op implemented as a part of `Highlightable`.\n   * @docs-private\n   */\n  setInactiveStyles() {}\n  /** Handle focus events on the option. */\n  _handleFocus() {\n    // Options can wind up getting focused in active descendant mode if the user clicks on them.\n    // In this case, we push focus back to the parent listbox to prevent an extra tab stop when\n    // the user performs a shift+tab.\n    if (this.listbox.useActiveDescendant) {\n      this.listbox._setActiveOption(this);\n      this.listbox.focus();\n    }\n  }\n  /** Get the tabindex for this option. */\n  _getTabIndex() {\n    if (this.listbox.useActiveDescendant || this.disabled) {\n      return -1;\n    }\n    return this.isActive() ? this.enabledTabIndex : -1;\n  }\n  static {\n    this.ɵfac = function CdkOption_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkOption)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkOption,\n      selectors: [[\"\", \"cdkOption\", \"\"]],\n      hostAttrs: [\"role\", \"option\", 1, \"cdk-option\"],\n      hostVars: 6,\n      hostBindings: function CdkOption_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function CdkOption_click_HostBindingHandler($event) {\n            return ctx._clicked.next($event);\n          })(\"focus\", function CdkOption_focus_HostBindingHandler() {\n            return ctx._handleFocus();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"aria-selected\", ctx.isSelected())(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled);\n          i0.ɵɵclassProp(\"cdk-option-active\", ctx.isActive());\n        }\n      },\n      inputs: {\n        id: \"id\",\n        value: [0, \"cdkOption\", \"value\"],\n        typeaheadLabel: [0, \"cdkOptionTypeaheadLabel\", \"typeaheadLabel\"],\n        disabled: [2, \"cdkOptionDisabled\", \"disabled\", booleanAttribute],\n        enabledTabIndex: [0, \"tabindex\", \"enabledTabIndex\"]\n      },\n      exportAs: [\"cdkOption\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkOption, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkOption]',\n      standalone: true,\n      exportAs: 'cdkOption',\n      host: {\n        'role': 'option',\n        'class': 'cdk-option',\n        '[id]': 'id',\n        '[attr.aria-selected]': 'isSelected()',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled',\n        '[class.cdk-option-active]': 'isActive()',\n        '(click)': '_clicked.next($event)',\n        '(focus)': '_handleFocus()'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }],\n    value: [{\n      type: Input,\n      args: ['cdkOption']\n    }],\n    typeaheadLabel: [{\n      type: Input,\n      args: ['cdkOptionTypeaheadLabel']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkOptionDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    enabledTabIndex: [{\n      type: Input,\n      args: ['tabindex']\n    }]\n  });\n})();\nclass CdkListbox {\n  /** The id of the option's host element. */\n  get id() {\n    return this._id || this._generatedId;\n  }\n  set id(value) {\n    this._id = value;\n  }\n  /** The tabindex to use when the listbox is enabled. */\n  get enabledTabIndex() {\n    return this._enabledTabIndex() === undefined ? 0 : this._enabledTabIndex();\n  }\n  set enabledTabIndex(value) {\n    this._enabledTabIndex.set(value);\n  }\n  /** The value selected in the listbox, represented as an array of option values. */\n  get value() {\n    return this._invalid ? [] : this.selectionModel.selected;\n  }\n  set value(value) {\n    this._setSelection(value);\n  }\n  /**\n   * Whether the listbox allows multiple options to be selected. If the value switches from `true`\n   * to `false`, and more than one option is selected, all options are deselected.\n   */\n  get multiple() {\n    return this.selectionModel.multiple;\n  }\n  set multiple(value) {\n    this.selectionModel.multiple = value;\n    if (this.options) {\n      this._updateInternalValue();\n    }\n  }\n  /** Whether the listbox is disabled. */\n  get disabled() {\n    return this._disabled();\n  }\n  set disabled(value) {\n    this._disabled.set(value);\n  }\n  /** Whether the listbox will use active descendant or will move focus onto the options. */\n  get useActiveDescendant() {\n    return this._useActiveDescendant();\n  }\n  set useActiveDescendant(value) {\n    this._useActiveDescendant.set(value);\n  }\n  /** The orientation of the listbox. Only affects keyboard interaction, not visual layout. */\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(value) {\n    this._orientation = value === 'horizontal' ? 'horizontal' : 'vertical';\n    if (value === 'horizontal') {\n      this.listKeyManager?.withHorizontalOrientation(this._dir?.value || 'ltr');\n    } else {\n      this.listKeyManager?.withVerticalOrientation();\n    }\n  }\n  /** The function used to compare option values. */\n  get compareWith() {\n    return this.selectionModel.compareWith;\n  }\n  set compareWith(fn) {\n    this.selectionModel.compareWith = fn;\n  }\n  /**\n   * Whether the keyboard navigation should wrap when the user presses arrow down on the last item\n   * or arrow up on the first item.\n   */\n  get navigationWrapDisabled() {\n    return this._navigationWrapDisabled;\n  }\n  set navigationWrapDisabled(wrap) {\n    this._navigationWrapDisabled = wrap;\n    this.listKeyManager?.withWrap(!this._navigationWrapDisabled);\n  }\n  /** Whether keyboard navigation should skip over disabled items. */\n  get navigateDisabledOptions() {\n    return this._navigateDisabledOptions;\n  }\n  set navigateDisabledOptions(skip) {\n    this._navigateDisabledOptions = skip;\n    this.listKeyManager?.skipPredicate(this._navigateDisabledOptions ? this._skipNonePredicate : this._skipDisabledPredicate);\n  }\n  constructor() {\n    this._generatedId = `cdk-listbox-${nextId++}`;\n    this._enabledTabIndex = signal(undefined);\n    this._disabled = signal(false);\n    this._useActiveDescendant = signal(false);\n    this._orientation = 'vertical';\n    this._navigationWrapDisabled = false;\n    this._navigateDisabledOptions = false;\n    /** Emits when the selected value(s) in the listbox change. */\n    this.valueChange = new Subject();\n    /** The selection model used by the listbox. */\n    this.selectionModel = new ListboxSelectionModel();\n    /** Emits when the listbox is destroyed. */\n    this.destroyed = new Subject();\n    /** The host element of the listbox. */\n    this.element = inject(ElementRef).nativeElement;\n    /** The Angular zone. */\n    this.ngZone = inject(NgZone);\n    /** The change detector for this listbox. */\n    this.changeDetectorRef = inject(ChangeDetectorRef);\n    /** Whether the currently selected value in the selection model is invalid. */\n    this._invalid = false;\n    /** The last user-triggered option. */\n    this._lastTriggered = null;\n    /** Callback called when the listbox has been touched */\n    this._onTouched = () => {};\n    /** Callback called when the listbox value changes */\n    this._onChange = () => {};\n    /** Emits when an option has been clicked. */\n    this._optionClicked = defer(() => this.options.changes.pipe(startWith(this.options), switchMap(options => merge(...options.map(option => option._clicked.pipe(map(event => ({\n      option,\n      event\n    }))))))));\n    /** The directionality of the page. */\n    this._dir = inject(Directionality, {\n      optional: true\n    });\n    /** Whether the component is being rendered in the browser. */\n    this._isBrowser = inject(Platform).isBrowser;\n    /** A predicate that skips disabled options. */\n    this._skipDisabledPredicate = option => option.disabled;\n    /** A predicate that does not skip any options. */\n    this._skipNonePredicate = () => false;\n    /** Whether the listbox currently has focus. */\n    this._hasFocus = false;\n    /** A reference to the option that was active before the listbox lost focus. */\n    this._previousActiveOption = null;\n    if (this._isBrowser) {\n      this._setPreviousActiveOptionAsActiveOptionOnWindowBlur();\n    }\n  }\n  ngAfterContentInit() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      this._verifyNoOptionValueCollisions();\n      this._verifyOptionValues();\n    }\n    this._initKeyManager();\n    // Update the internal value whenever the options or the model value changes.\n    merge(this.selectionModel.changed, this.options.changes).pipe(startWith(null), takeUntil(this.destroyed)).subscribe(() => this._updateInternalValue());\n    this._optionClicked.pipe(filter(({\n      option\n    }) => !option.disabled), takeUntil(this.destroyed)).subscribe(({\n      option,\n      event\n    }) => this._handleOptionClicked(option, event));\n  }\n  ngOnDestroy() {\n    this.listKeyManager?.destroy();\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n  /**\n   * Toggle the selected state of the given option.\n   * @param option The option to toggle\n   */\n  toggle(option) {\n    this.toggleValue(option.value);\n  }\n  /**\n   * Toggle the selected state of the given value.\n   * @param value The value to toggle\n   */\n  toggleValue(value) {\n    if (this._invalid) {\n      this.selectionModel.clear(false);\n    }\n    this.selectionModel.toggle(value);\n  }\n  /**\n   * Select the given option.\n   * @param option The option to select\n   */\n  select(option) {\n    this.selectValue(option.value);\n  }\n  /**\n   * Select the given value.\n   * @param value The value to select\n   */\n  selectValue(value) {\n    if (this._invalid) {\n      this.selectionModel.clear(false);\n    }\n    this.selectionModel.select(value);\n  }\n  /**\n   * Deselect the given option.\n   * @param option The option to deselect\n   */\n  deselect(option) {\n    this.deselectValue(option.value);\n  }\n  /**\n   * Deselect the given value.\n   * @param value The value to deselect\n   */\n  deselectValue(value) {\n    if (this._invalid) {\n      this.selectionModel.clear(false);\n    }\n    this.selectionModel.deselect(value);\n  }\n  /**\n   * Set the selected state of all options.\n   * @param isSelected The new selected state to set\n   */\n  setAllSelected(isSelected) {\n    if (!isSelected) {\n      this.selectionModel.clear();\n    } else {\n      if (this._invalid) {\n        this.selectionModel.clear(false);\n      }\n      this.selectionModel.select(...this.options.map(option => option.value));\n    }\n  }\n  /**\n   * Get whether the given option is selected.\n   * @param option The option to get the selected state of\n   */\n  isSelected(option) {\n    return this.isValueSelected(option.value);\n  }\n  /**\n   * Get whether the given option is active.\n   * @param option The option to get the active state of\n   */\n  isActive(option) {\n    return !!(this.listKeyManager?.activeItem === option);\n  }\n  /**\n   * Get whether the given value is selected.\n   * @param value The value to get the selected state of\n   */\n  isValueSelected(value) {\n    if (this._invalid) {\n      return false;\n    }\n    return this.selectionModel.isSelected(value);\n  }\n  /**\n   * Registers a callback to be invoked when the listbox's value changes from user input.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Registers a callback to be invoked when the listbox is blurred by the user.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Sets the listbox's value.\n   * @param value The new value of the listbox\n   * @docs-private\n   */\n  writeValue(value) {\n    this._setSelection(value);\n    this._verifyOptionValues();\n  }\n  /**\n   * Sets the disabled state of the listbox.\n   * @param isDisabled The new disabled state\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.changeDetectorRef.markForCheck();\n  }\n  /** Focus the listbox's host element. */\n  focus() {\n    this.element.focus();\n  }\n  /**\n   * Triggers the given option in response to user interaction.\n   * - In single selection mode: selects the option and deselects any other selected option.\n   * - In multi selection mode: toggles the selected state of the option.\n   * @param option The option to trigger\n   */\n  triggerOption(option) {\n    if (option && !option.disabled) {\n      this._lastTriggered = option;\n      const changed = this.multiple ? this.selectionModel.toggle(option.value) : this.selectionModel.select(option.value);\n      if (changed) {\n        this._onChange(this.value);\n        this.valueChange.next({\n          value: this.value,\n          listbox: this,\n          option: option\n        });\n      }\n    }\n  }\n  /**\n   * Trigger the given range of options in response to user interaction.\n   * Should only be called in multi-selection mode.\n   * @param trigger The option that was triggered\n   * @param from The start index of the options to toggle\n   * @param to The end index of the options to toggle\n   * @param on Whether to toggle the option range on\n   */\n  triggerRange(trigger, from, to, on) {\n    if (this.disabled || trigger && trigger.disabled) {\n      return;\n    }\n    this._lastTriggered = trigger;\n    const isEqual = this.compareWith ?? Object.is;\n    const updateValues = [...this.options].slice(Math.max(0, Math.min(from, to)), Math.min(this.options.length, Math.max(from, to) + 1)).filter(option => !option.disabled).map(option => option.value);\n    const selected = [...this.value];\n    for (const updateValue of updateValues) {\n      const selectedIndex = selected.findIndex(selectedValue => isEqual(selectedValue, updateValue));\n      if (on && selectedIndex === -1) {\n        selected.push(updateValue);\n      } else if (!on && selectedIndex !== -1) {\n        selected.splice(selectedIndex, 1);\n      }\n    }\n    let changed = this.selectionModel.setSelection(...selected);\n    if (changed) {\n      this._onChange(this.value);\n      this.valueChange.next({\n        value: this.value,\n        listbox: this,\n        option: trigger\n      });\n    }\n  }\n  /**\n   * Sets the given option as active.\n   * @param option The option to make active\n   */\n  _setActiveOption(option) {\n    this.listKeyManager.setActiveItem(option);\n  }\n  /** Called when the listbox receives focus. */\n  _handleFocus() {\n    if (!this.useActiveDescendant) {\n      if (this.selectionModel.selected.length > 0) {\n        this._setNextFocusToSelectedOption();\n      } else {\n        this.listKeyManager.setNextItemActive();\n      }\n      this._focusActiveOption();\n    }\n  }\n  /** Called when the user presses keydown on the listbox. */\n  _handleKeydown(event) {\n    if (this.disabled) {\n      return;\n    }\n    const {\n      keyCode\n    } = event;\n    const previousActiveIndex = this.listKeyManager.activeItemIndex;\n    const ctrlKeys = ['ctrlKey', 'metaKey'];\n    if (this.multiple && keyCode === A && hasModifierKey(event, ...ctrlKeys)) {\n      // Toggle all options off if they're all selected, otherwise toggle them all on.\n      this.triggerRange(null, 0, this.options.length - 1, this.options.length !== this.value.length);\n      event.preventDefault();\n      return;\n    }\n    if (this.multiple && (keyCode === SPACE || keyCode === ENTER) && hasModifierKey(event, 'shiftKey')) {\n      if (this.listKeyManager.activeItem && this.listKeyManager.activeItemIndex != null) {\n        this.triggerRange(this.listKeyManager.activeItem, this._getLastTriggeredIndex() ?? this.listKeyManager.activeItemIndex, this.listKeyManager.activeItemIndex, !this.listKeyManager.activeItem.isSelected());\n      }\n      event.preventDefault();\n      return;\n    }\n    if (this.multiple && keyCode === HOME && hasModifierKey(event, ...ctrlKeys) && hasModifierKey(event, 'shiftKey')) {\n      const trigger = this.listKeyManager.activeItem;\n      if (trigger) {\n        const from = this.listKeyManager.activeItemIndex;\n        this.listKeyManager.setFirstItemActive();\n        this.triggerRange(trigger, from, this.listKeyManager.activeItemIndex, !trigger.isSelected());\n      }\n      event.preventDefault();\n      return;\n    }\n    if (this.multiple && keyCode === END && hasModifierKey(event, ...ctrlKeys) && hasModifierKey(event, 'shiftKey')) {\n      const trigger = this.listKeyManager.activeItem;\n      if (trigger) {\n        const from = this.listKeyManager.activeItemIndex;\n        this.listKeyManager.setLastItemActive();\n        this.triggerRange(trigger, from, this.listKeyManager.activeItemIndex, !trigger.isSelected());\n      }\n      event.preventDefault();\n      return;\n    }\n    if (keyCode === SPACE || keyCode === ENTER) {\n      this.triggerOption(this.listKeyManager.activeItem);\n      event.preventDefault();\n      return;\n    }\n    const isNavKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW || keyCode === HOME || keyCode === END;\n    this.listKeyManager.onKeydown(event);\n    // Will select an option if shift was pressed while navigating to the option\n    if (isNavKey && event.shiftKey && previousActiveIndex !== this.listKeyManager.activeItemIndex) {\n      this.triggerOption(this.listKeyManager.activeItem);\n    }\n  }\n  /** Called when a focus moves into the listbox. */\n  _handleFocusIn() {\n    // Note that we use a `focusin` handler for this instead of the existing `focus` handler,\n    // because focus won't land on the listbox if `useActiveDescendant` is enabled.\n    this._hasFocus = true;\n  }\n  /**\n   * Called when the focus leaves an element in the listbox.\n   * @param event The focusout event\n   */\n  _handleFocusOut(event) {\n    // Some browsers (e.g. Chrome and Firefox) trigger the focusout event when the user returns back to the document.\n    // To prevent losing the active option in this case, we store it in `_previousActiveOption` and restore it on the window `blur` event\n    // This ensures that the `activeItem` matches the actual focused element when the user returns to the document.\n    this._previousActiveOption = this.listKeyManager.activeItem;\n    const otherElement = event.relatedTarget;\n    if (this.element !== otherElement && !this.element.contains(otherElement)) {\n      this._onTouched();\n      this._hasFocus = false;\n      this._setNextFocusToSelectedOption();\n    }\n  }\n  /** Get the id of the active option if active descendant is being used. */\n  _getAriaActiveDescendant() {\n    return this.useActiveDescendant ? this.listKeyManager?.activeItem?.id : null;\n  }\n  /** Get the tabindex for the listbox. */\n  _getTabIndex() {\n    if (this.disabled) {\n      return -1;\n    }\n    return this.useActiveDescendant || !this.listKeyManager.activeItem ? this.enabledTabIndex : -1;\n  }\n  /** Initialize the key manager. */\n  _initKeyManager() {\n    this.listKeyManager = new ActiveDescendantKeyManager(this.options).withWrap(!this._navigationWrapDisabled).withTypeAhead().withHomeAndEnd().withAllowedModifierKeys(['shiftKey']).skipPredicate(this._navigateDisabledOptions ? this._skipNonePredicate : this._skipDisabledPredicate);\n    if (this.orientation === 'vertical') {\n      this.listKeyManager.withVerticalOrientation();\n    } else {\n      this.listKeyManager.withHorizontalOrientation(this._dir?.value || 'ltr');\n    }\n    if (this.selectionModel.selected.length) {\n      Promise.resolve().then(() => this._setNextFocusToSelectedOption());\n    }\n    this.listKeyManager.change.subscribe(() => this._focusActiveOption());\n    this.options.changes.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      const activeOption = this.listKeyManager.activeItem;\n      // If the active option was deleted, we need to reset\n      // the key manager so it can allow focus back in.\n      if (activeOption && !this.options.find(option => option === activeOption)) {\n        this.listKeyManager.setActiveItem(-1);\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n  /** Focus the active option. */\n  _focusActiveOption() {\n    if (!this.useActiveDescendant) {\n      this.listKeyManager.activeItem?.focus();\n    }\n    this.changeDetectorRef.markForCheck();\n  }\n  /**\n   * Set the selected values.\n   * @param value The list of new selected values.\n   */\n  _setSelection(value) {\n    if (this._invalid) {\n      this.selectionModel.clear(false);\n    }\n    this.selectionModel.setSelection(...this._coerceValue(value));\n    if (!this._hasFocus) {\n      this._setNextFocusToSelectedOption();\n    }\n  }\n  /** Sets the first selected option as first in the keyboard focus order. */\n  _setNextFocusToSelectedOption() {\n    // Null check the options since they only get defined after `ngAfterContentInit`.\n    const selected = this.options?.find(option => option.isSelected());\n    if (selected) {\n      this.listKeyManager.updateActiveItem(selected);\n    }\n  }\n  /** Update the internal value of the listbox based on the selection model. */\n  _updateInternalValue() {\n    const indexCache = new Map();\n    this.selectionModel.sort((a, b) => {\n      const aIndex = this._getIndexForValue(indexCache, a);\n      const bIndex = this._getIndexForValue(indexCache, b);\n      return aIndex - bIndex;\n    });\n    const selected = this.selectionModel.selected;\n    this._invalid = !this.multiple && selected.length > 1 || !!this._getInvalidOptionValues(selected).length;\n    this.changeDetectorRef.markForCheck();\n  }\n  /**\n   * Gets the index of the given value in the given list of options.\n   * @param cache The cache of indices found so far\n   * @param value The value to find\n   * @return The index of the value in the options list\n   */\n  _getIndexForValue(cache, value) {\n    const isEqual = this.compareWith || Object.is;\n    if (!cache.has(value)) {\n      let index = -1;\n      for (let i = 0; i < this.options.length; i++) {\n        if (isEqual(value, this.options.get(i).value)) {\n          index = i;\n          break;\n        }\n      }\n      cache.set(value, index);\n    }\n    return cache.get(value);\n  }\n  /**\n   * Handle the user clicking an option.\n   * @param option The option that was clicked.\n   */\n  _handleOptionClicked(option, event) {\n    event.preventDefault();\n    this.listKeyManager.setActiveItem(option);\n    if (event.shiftKey && this.multiple) {\n      this.triggerRange(option, this._getLastTriggeredIndex() ?? this.listKeyManager.activeItemIndex, this.listKeyManager.activeItemIndex, !option.isSelected());\n    } else {\n      this.triggerOption(option);\n    }\n  }\n  /** Verifies that no two options represent the same value under the compareWith function. */\n  _verifyNoOptionValueCollisions() {\n    this.options.changes.pipe(startWith(this.options), takeUntil(this.destroyed)).subscribe(() => {\n      const isEqual = this.compareWith ?? Object.is;\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options.get(i);\n        let duplicate = null;\n        for (let j = i + 1; j < this.options.length; j++) {\n          const other = this.options.get(j);\n          if (isEqual(option.value, other.value)) {\n            duplicate = other;\n            break;\n          }\n        }\n        if (duplicate) {\n          // TODO(mmalerba): Link to docs about this.\n          if (this.compareWith) {\n            console.warn(`Found multiple CdkOption representing the same value under the given compareWith function`, {\n              option1: option.element,\n              option2: duplicate.element,\n              compareWith: this.compareWith\n            });\n          } else {\n            console.warn(`Found multiple CdkOption with the same value`, {\n              option1: option.element,\n              option2: duplicate.element\n            });\n          }\n          return;\n        }\n      }\n    });\n  }\n  /** Verifies that the option values are valid. */\n  _verifyOptionValues() {\n    if (this.options && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      const selected = this.selectionModel.selected;\n      const invalidValues = this._getInvalidOptionValues(selected);\n      if (!this.multiple && selected.length > 1) {\n        throw Error('Listbox cannot have more than one selected value in multi-selection mode.');\n      }\n      if (invalidValues.length) {\n        throw Error('Listbox has selected values that do not match any of its options.');\n      }\n    }\n  }\n  /**\n   * Coerces a value into an array representing a listbox selection.\n   * @param value The value to coerce\n   * @return An array\n   */\n  _coerceValue(value) {\n    return value == null ? [] : coerceArray(value);\n  }\n  /**\n   * Get the sublist of values that do not represent valid option values in this listbox.\n   * @param values The list of values\n   * @return The sublist of values that are not valid option values\n   */\n  _getInvalidOptionValues(values) {\n    const isEqual = this.compareWith || Object.is;\n    const validValues = (this.options || []).map(option => option.value);\n    return values.filter(value => !validValues.some(validValue => isEqual(value, validValue)));\n  }\n  /** Get the index of the last triggered option. */\n  _getLastTriggeredIndex() {\n    const index = this.options.toArray().indexOf(this._lastTriggered);\n    return index === -1 ? null : index;\n  }\n  /**\n   * Set previous active option as active option on window blur.\n   * This ensures that the `activeOption` matches the actual focused element when the user returns to the document.\n   */\n  _setPreviousActiveOptionAsActiveOptionOnWindowBlur() {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(window, 'blur').pipe(takeUntil(this.destroyed)).subscribe(() => {\n        if (this.element.contains(document.activeElement) && this._previousActiveOption) {\n          this._setActiveOption(this._previousActiveOption);\n          this._previousActiveOption = null;\n        }\n      });\n    });\n  }\n  static {\n    this.ɵfac = function CdkListbox_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkListbox)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkListbox,\n      selectors: [[\"\", \"cdkListbox\", \"\"]],\n      contentQueries: function CdkListbox_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, CdkOption, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n        }\n      },\n      hostAttrs: [\"role\", \"listbox\", 1, \"cdk-listbox\"],\n      hostVars: 6,\n      hostBindings: function CdkListbox_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function CdkListbox_focus_HostBindingHandler() {\n            return ctx._handleFocus();\n          })(\"keydown\", function CdkListbox_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          })(\"focusout\", function CdkListbox_focusout_HostBindingHandler($event) {\n            return ctx._handleFocusOut($event);\n          })(\"focusin\", function CdkListbox_focusin_HostBindingHandler() {\n            return ctx._handleFocusIn();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled)(\"aria-multiselectable\", ctx.multiple)(\"aria-activedescendant\", ctx._getAriaActiveDescendant())(\"aria-orientation\", ctx.orientation);\n        }\n      },\n      inputs: {\n        id: \"id\",\n        enabledTabIndex: [0, \"tabindex\", \"enabledTabIndex\"],\n        value: [0, \"cdkListboxValue\", \"value\"],\n        multiple: [2, \"cdkListboxMultiple\", \"multiple\", booleanAttribute],\n        disabled: [2, \"cdkListboxDisabled\", \"disabled\", booleanAttribute],\n        useActiveDescendant: [2, \"cdkListboxUseActiveDescendant\", \"useActiveDescendant\", booleanAttribute],\n        orientation: [0, \"cdkListboxOrientation\", \"orientation\"],\n        compareWith: [0, \"cdkListboxCompareWith\", \"compareWith\"],\n        navigationWrapDisabled: [2, \"cdkListboxNavigationWrapDisabled\", \"navigationWrapDisabled\", booleanAttribute],\n        navigateDisabledOptions: [2, \"cdkListboxNavigatesDisabledOptions\", \"navigateDisabledOptions\", booleanAttribute]\n      },\n      outputs: {\n        valueChange: \"cdkListboxValueChange\"\n      },\n      exportAs: [\"cdkListbox\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CdkListbox),\n        multi: true\n      }]), i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkListbox, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkListbox]',\n      standalone: true,\n      exportAs: 'cdkListbox',\n      host: {\n        'role': 'listbox',\n        'class': 'cdk-listbox',\n        '[id]': 'id',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n        '[attr.aria-orientation]': 'orientation',\n        '(focus)': '_handleFocus()',\n        '(keydown)': '_handleKeydown($event)',\n        '(focusout)': '_handleFocusOut($event)',\n        '(focusin)': '_handleFocusIn()'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CdkListbox),\n        multi: true\n      }]\n    }]\n  }], () => [], {\n    id: [{\n      type: Input\n    }],\n    enabledTabIndex: [{\n      type: Input,\n      args: ['tabindex']\n    }],\n    value: [{\n      type: Input,\n      args: ['cdkListboxValue']\n    }],\n    multiple: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxMultiple',\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    useActiveDescendant: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxUseActiveDescendant',\n        transform: booleanAttribute\n      }]\n    }],\n    orientation: [{\n      type: Input,\n      args: ['cdkListboxOrientation']\n    }],\n    compareWith: [{\n      type: Input,\n      args: ['cdkListboxCompareWith']\n    }],\n    navigationWrapDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxNavigationWrapDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    navigateDisabledOptions: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxNavigatesDisabledOptions',\n        transform: booleanAttribute\n      }]\n    }],\n    valueChange: [{\n      type: Output,\n      args: ['cdkListboxValueChange']\n    }],\n    options: [{\n      type: ContentChildren,\n      args: [CdkOption, {\n        descendants: true\n      }]\n    }]\n  });\n})();\nconst EXPORTED_DECLARATIONS = [CdkListbox, CdkOption];\nclass CdkListboxModule {\n  static {\n    this.ɵfac = function CdkListboxModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkListboxModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CdkListboxModule,\n      imports: [CdkListbox, CdkOption],\n      exports: [CdkListbox, CdkOption]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkListboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [...EXPORTED_DECLARATIONS],\n      exports: [...EXPORTED_DECLARATIONS]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkListbox, CdkListboxModule, CdkOption };\n", "import * as i0 from '@angular/core';\nimport { signal, inject, PLATFORM_ID, ElementRef, Directive, Input, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgControl } from '@angular/forms';\nlet nextId = 0;\nclass BrnLabelDirective {\n  constructor() {\n    this._id = signal(`brn-label-${nextId++}`);\n    this._ngControl = inject(NgControl, {\n      optional: true\n    });\n    this._isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n    this._element = inject(ElementRef).nativeElement;\n    this._dataDisabled = signal('auto');\n    this.dataDisabled = this._dataDisabled.asReadonly();\n  }\n  set id(id) {\n    this._id.set(id || this._id());\n  }\n  get id() {\n    return this._id();\n  }\n  ngOnInit() {\n    if (!this._isBrowser) return;\n    this._changes = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (mutation.attributeName !== 'data-disabled') return;\n        // eslint-disable-next-line\n        const state = mutation.target.attributes.getNamedItem(mutation.attributeName)?.value === 'true';\n        this._dataDisabled.set(state ?? 'auto');\n      });\n    });\n    this._changes?.observe(this._element, {\n      attributes: true,\n      childList: true,\n      characterData: true\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnLabelDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnLabelDirective)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnLabelDirective,\n      selectors: [[\"\", \"brnLabel\", \"\"]],\n      hostVars: 9,\n      hostBindings: function BrnLabelDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx._id());\n          i0.ɵɵclassProp(\"ng-invalid\", (ctx._ngControl == null ? null : ctx._ngControl.invalid) || null)(\"ng-dirty\", (ctx._ngControl == null ? null : ctx._ngControl.dirty) || null)(\"ng-valid\", (ctx._ngControl == null ? null : ctx._ngControl.valid) || null)(\"ng-touched\", (ctx._ngControl == null ? null : ctx._ngControl.touched) || null);\n        }\n      },\n      inputs: {\n        id: \"id\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnLabelDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnLabel]',\n      standalone: true,\n      host: {\n        '[id]': '_id()',\n        '[class.ng-invalid]': 'this._ngControl?.invalid || null',\n        '[class.ng-dirty]': 'this._ngControl?.dirty || null',\n        '[class.ng-valid]': 'this._ngControl?.valid || null',\n        '[class.ng-touched]': 'this._ngControl?.touched || null'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\nclass BrnLabelModule {\n  /** @nocollapse */static {\n    this.ɵfac = function BrnLabelModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnLabelModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BrnLabelModule,\n      imports: [BrnLabelDirective],\n      exports: [BrnLabelDirective]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnLabelModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BrnLabelDirective],\n      exports: [BrnLabelDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrnLabelDirective, BrnLabelModule };\n", "import * as i0 from '@angular/core';\nimport { signal, computed, Injectable, inject, ElementRef, Directive, Input, DestroyRef, effect, Component, ChangeDetectionStrategy, ViewChild, ContentChild, ContentChildren, ChangeDetectorRef, input, contentChildren, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/listbox';\nimport { CdkOption, CdkListbox, CdkListboxModule } from '@angular/cdk/listbox';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { toObservable, takeUntilDestroyed, toSignal } from '@angular/core/rxjs-interop';\nimport { Subject, skip, fromEvent, interval, takeUntil, map, switchMap, of, delay, combineLatest } from 'rxjs';\nimport * as i1$1 from '@spartan-ng/ui-label-brain';\nimport { BrnLabelDirective } from '@spartan-ng/ui-label-brain';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport * as i1$2 from '@angular/cdk/overlay';\nimport { CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { provideExposedSideProviderExisting, provideExposesStateProviderExisting } from '@spartan-ng/ui-core';\nimport { BrnFormFieldControl } from '@spartan-ng/ui-formfield-brain';\nimport { ErrorStateMatcher, ErrorStateTracker } from '@spartan-ng/ui-forms-brain';\nconst _c0 = [\"viewport\"];\nconst _c1 = [\"*\", [[\"hlm-select-scroll-up\"]], [[\"brnSelectScrollUp\"]], [[\"brnSelectScrollDown\"]], [[\"hlm-select-scroll-down\"]]];\nconst _c2 = [\"*\", \"hlm-select-scroll-up\", \"brnSelectScrollUp\", \"brnSelectScrollDown\", \"hlm-select-scroll-down\"];\nfunction BrnSelectContentComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n    i0.ɵɵprojection(1, 2);\n  }\n}\nfunction BrnSelectContentComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction BrnSelectContentComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 3);\n    i0.ɵɵprojection(1, 4);\n  }\n}\nfunction BrnSelectContentComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c3 = [[[\"hlm-select-trigger\"], [\"\", \"brnSelectTrigger\", \"\"]], [[\"label\", \"hlmLabel\", \"\"], [\"label\", \"brnLabel\", \"\"]], \"*\"];\nconst _c4 = [\"hlm-select-trigger,[brnSelectTrigger]\", \"label[hlmLabel],label[brnLabel]\", \"*\"];\nfunction BrnSelectComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"id\", ctx_r1.backupLabelId());\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1._placeholder());\n  }\n}\nfunction BrnSelectComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nfunction BrnSelectComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nclass BrnSelectService {\n  get selectTrigger() {\n    return this._selectTrigger;\n  }\n  constructor() {\n    this.state = signal({\n      id: '',\n      labelId: '',\n      panelId: '',\n      placeholder: '',\n      isExpanded: false,\n      multiple: false,\n      disabled: false,\n      dir: 'ltr',\n      selectedOptions: [],\n      possibleOptions: [],\n      value: '',\n      triggerWidth: 0\n    });\n    this.id = computed(() => this.state().id);\n    this.labelId = computed(() => this.state().labelId);\n    this.panelId = computed(() => this.state().panelId);\n    this.placeholder = computed(() => this.state().placeholder);\n    this.disabled = computed(() => this.state().disabled);\n    this.isExpanded = computed(() => this.state().isExpanded);\n    this.multiple = computed(() => this.state().multiple);\n    this.dir = computed(() => this.state().dir);\n    this.selectedOptions = computed(() => this.state().selectedOptions);\n    this.value = computed(() => this.state().value);\n    this.triggerWidth = computed(() => this.state().triggerWidth);\n    this.possibleOptions = computed(() => this.state().possibleOptions);\n    this.multiple$ = toObservable(this.multiple);\n    this.listBoxValueChangeEvent$ = new Subject();\n    this.listBoxValueChangeEvent$.pipe(takeUntilDestroyed()).subscribe(listBoxChange => {\n      const updatedSelections = this.multiple() ? this.getUpdatedOptions(listBoxChange) : [listBoxChange.option];\n      const value = this.multiple() ? listBoxChange.value : listBoxChange.value[0];\n      this.state.update(state => ({\n        ...state,\n        selectedOptions: [...updatedSelections],\n        value: value\n      }));\n    });\n    // We need to skip the first value because we don't want to deselect all options when the component is initialized with a preselected value e.g. by the form control\n    this.multiple$.pipe(skip(1), takeUntilDestroyed()).subscribe(multiple => {\n      if (!multiple && this.value().length > 1) {\n        this.deselectAllOptions();\n      }\n    });\n  }\n  setTriggerWidth(triggerWidth) {\n    this.state.update(s => ({\n      ...s,\n      triggerWidth\n    }));\n  }\n  getUpdatedOptions(latestListboxChange) {\n    const isNewSelection = latestListboxChange.value.findIndex(value => value === latestListboxChange.option?.value);\n    if (isNewSelection === -1) {\n      const removedOptionIndex = this.selectedOptions().findIndex(option => latestListboxChange.option === option);\n      const options = this.selectedOptions();\n      options.splice(removedOptionIndex, 1);\n      return options;\n    }\n    return [...this.selectedOptions(), latestListboxChange.option];\n  }\n  deselectAllOptions() {\n    this.state.update(state => ({\n      ...state,\n      selectedOptions: [],\n      value: []\n    }));\n  }\n  // Needed due to https://github.com/angular/angular/issues/20810\n  _setSelectTrigger(trigger) {\n    this._selectTrigger = trigger;\n  }\n  setInitialSelectedOptions(value) {\n    this.selectOptionByValue(value);\n    this.state.update(state => ({\n      ...state,\n      value: value,\n      initialSelectedOptions: this.selectedOptions(),\n      selectedOptions: this.selectedOptions()\n    }));\n  }\n  selectOptionByValue(value) {\n    const options = this.possibleOptions();\n    if (value === null || value === undefined) {\n      const nullOrUndefinedOption = options.find(o => o && o.value === value);\n      if (!nullOrUndefinedOption) {\n        this.state.update(state => ({\n          ...state,\n          selectedOptions: [],\n          value: this.multiple() ? [] : ''\n        }));\n        return;\n      }\n    }\n    if (this.multiple()) {\n      const selectedOptions = options.filter(option => {\n        if (Array.isArray(value)) {\n          return value.includes(option?.value);\n        }\n        return value === option?.value;\n      });\n      this.state.update(state => ({\n        ...state,\n        selectedOptions,\n        value: value\n      }));\n    } else {\n      const selectedOption = options.find(option => option?.value === value);\n      if (!selectedOption) {\n        return;\n      }\n      this.state.update(state => ({\n        ...state,\n        selectedOptions: [selectedOption],\n        value: selectedOption.value\n      }));\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectService)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BrnSelectService,\n      factory: BrnSelectService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectService, [{\n    type: Injectable\n  }], () => [], null);\n})();\nclass BrnSelectOptionDirective {\n  constructor() {\n    this._cdkSelectOption = inject(CdkOption, {\n      host: true\n    });\n    this._selectService = inject(BrnSelectService);\n    this._selected = signal(false);\n    this._focused = signal(false);\n    this.elementRef = inject(ElementRef);\n    this.selected = computed(() => this._selected());\n    this.focused = computed(() => this._focused());\n    this.checkedState = computed(() => this._selected() ? 'checked' : 'unchecked');\n    this.dir = computed(() => this._selectService.dir());\n    this._disabled = false;\n    toObservable(this._selectService.value).subscribe(selectedValues => {\n      if (Array.isArray(selectedValues)) {\n        const itemFound = selectedValues.find(val => val === this._cdkSelectOption.value);\n        this._selected.set(!!itemFound);\n      } else {\n        this._selected.set(this._cdkSelectOption.value === selectedValues);\n      }\n    });\n  }\n  set value(value) {\n    this._cdkSelectOption.value = value;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  hover() {\n    this.focus();\n  }\n  focus() {\n    this._cdkSelectOption.focus();\n    this._focused.set(true);\n  }\n  blur() {\n    this._focused.set(false);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectOptionDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectOptionDirective)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnSelectOptionDirective,\n      selectors: [[\"\", \"brnOption\", \"\"]],\n      hostVars: 1,\n      hostBindings: function BrnSelectOptionDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseenter\", function BrnSelectOptionDirective_mouseenter_HostBindingHandler() {\n            return ctx.hover();\n          })(\"blur\", function BrnSelectOptionDirective_blur_HostBindingHandler() {\n            return ctx.blur();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"dir\", ctx._selectService.dir());\n        }\n      },\n      inputs: {\n        value: \"value\",\n        disabled: \"disabled\"\n      },\n      standalone: true,\n      features: [i0.ɵɵHostDirectivesFeature([i1.CdkOption])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectOptionDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnOption]',\n      standalone: true,\n      hostDirectives: [CdkOption],\n      host: {\n        '(mouseenter)': 'hover()',\n        '(blur)': 'blur()',\n        '[attr.dir]': '_selectService.dir()'\n      }\n    }]\n  }], () => [], {\n    value: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\nclass BrnSelectScrollDownDirective {\n  constructor() {\n    this._el = inject(ElementRef);\n    this._selectContent = inject(BrnSelectContentComponent);\n    this.endReached = new Subject();\n    this._destroyRef = inject(DestroyRef);\n  }\n  startEmittingEvents() {\n    const mouseLeave$ = fromEvent(this._el.nativeElement, 'mouseleave');\n    interval(100).pipe(takeUntil(mouseLeave$), takeUntil(this.endReached), takeUntilDestroyed(this._destroyRef)).subscribe(() => this._selectContent.moveFocusDown());\n  }\n  stopEmittingEvents() {\n    this.endReached.next(true);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectScrollDownDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectScrollDownDirective)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnSelectScrollDownDirective,\n      selectors: [[\"\", \"brnSelectScrollDown\", \"\"], [\"brn-select-scroll-down\"], [\"hlm-select-scroll-down\", 5, \"noHlm\"]],\n      hostAttrs: [\"aria-hidden\", \"true\"],\n      hostBindings: function BrnSelectScrollDownDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseenter\", function BrnSelectScrollDownDirective_mouseenter_HostBindingHandler() {\n            return ctx.startEmittingEvents();\n          });\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectScrollDownDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectScrollDown], brn-select-scroll-down, hlm-select-scroll-down:not(noHlm)',\n      standalone: true,\n      host: {\n        'aria-hidden': 'true',\n        '(mouseenter)': 'startEmittingEvents()'\n      }\n    }]\n  }], null, null);\n})();\nclass BrnSelectScrollUpDirective {\n  constructor() {\n    this._el = inject(ElementRef);\n    this._selectContent = inject(BrnSelectContentComponent);\n    this.endReached = new Subject();\n    this._destroyRef = inject(DestroyRef);\n  }\n  startEmittingEvents() {\n    const mouseLeave$ = fromEvent(this._el.nativeElement, 'mouseleave');\n    interval(100).pipe(takeUntil(mouseLeave$), takeUntil(this.endReached), takeUntilDestroyed(this._destroyRef)).subscribe(() => this._selectContent.moveFocusUp());\n  }\n  stopEmittingEvents() {\n    this.endReached.next(true);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectScrollUpDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectScrollUpDirective)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnSelectScrollUpDirective,\n      selectors: [[\"\", \"brnSelectScrollUp\", \"\"], [\"brn-select-scroll-up\"], [\"hlm-select-scroll-up\", 5, \"noHlm\"]],\n      hostAttrs: [\"aria-hidden\", \"true\"],\n      hostBindings: function BrnSelectScrollUpDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseenter\", function BrnSelectScrollUpDirective_mouseenter_HostBindingHandler() {\n            return ctx.startEmittingEvents();\n          });\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectScrollUpDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectScrollUp], brn-select-scroll-up, hlm-select-scroll-up:not(noHlm)',\n      standalone: true,\n      host: {\n        'aria-hidden': 'true',\n        '(mouseenter)': 'startEmittingEvents()'\n      }\n    }]\n  }], null, null);\n})();\nclass BrnSelectContentComponent {\n  constructor() {\n    this._el = inject(ElementRef);\n    this._cdkListbox = inject(CdkListbox, {\n      host: true\n    });\n    this.destroyRef = inject(DestroyRef);\n    this._selectService = inject(BrnSelectService);\n    this.labelledBy = this._selectService.labelId;\n    this.id = this._selectService.id;\n    this.canScrollUp = signal(false);\n    this.canScrollDown = signal(false);\n    this.initialSelectedOptions$ = toObservable(this._selectService.selectedOptions);\n    this._cdkListbox.valueChange.asObservable().pipe(takeUntilDestroyed()).subscribe(val => this._selectService.listBoxValueChangeEvent$.next(val));\n    effect(() => {\n      this._cdkListbox.multiple = this._selectService.multiple();\n      this._selectService.isExpanded() && setTimeout(() => this.updateArrowDisplay());\n    });\n  }\n  ngAfterViewInit() {\n    this.setInitiallySelectedOptions();\n  }\n  setInitiallySelectedOptions() {\n    this.initialSelectedOptions$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(selectedOptions => {\n      // Reapplying cdkLibstbox multiple because seems this is running before effect that\n      // updates cdklistbox, reapplying multiple true so we can set the multiple initial options\n      if (this._selectService.multiple()) {\n        this._cdkListbox.multiple = true;\n      }\n      for (const cdkOption of this._selectService.possibleOptions()) {\n        if (selectedOptions.includes(cdkOption)) {\n          cdkOption?.select();\n        } else {\n          cdkOption?.deselect();\n        }\n      }\n      for (const cdkOption of selectedOptions) {\n        cdkOption?.select();\n      }\n    });\n  }\n  updateArrowDisplay() {\n    this.canScrollUp.set(this.viewport.nativeElement.scrollTop > 0);\n    const maxScroll = this.viewport.nativeElement.scrollHeight - this.viewport.nativeElement.clientHeight;\n    this.canScrollDown.set(Math.ceil(this.viewport.nativeElement.scrollTop) < maxScroll);\n  }\n  handleScroll() {\n    this.updateArrowDisplay();\n  }\n  focusList() {\n    this._cdkListbox.focus();\n  }\n  moveFocusUp() {\n    this.viewport.nativeElement.scrollBy({\n      top: -100,\n      behavior: 'smooth'\n    });\n    if (this.viewport.nativeElement.scrollTop === 0) {\n      this.scrollUpBtn.stopEmittingEvents();\n    }\n  }\n  moveFocusDown() {\n    this.viewport.nativeElement.scrollBy({\n      top: 100,\n      behavior: 'smooth'\n    });\n    const viewportSize = this._el.nativeElement.scrollHeight;\n    const viewportScrollPosition = this.viewport.nativeElement.scrollTop;\n    if (viewportSize + viewportScrollPosition + 100 > this.viewport.nativeElement.scrollHeight + 50) {\n      this.scrollDownBtn.stopEmittingEvents();\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectContentComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectContentComponent)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: BrnSelectContentComponent,\n      selectors: [[\"brn-select-content\"], [\"hlm-select-content\", 5, \"noHlm\"]],\n      contentQueries: function BrnSelectContentComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, BrnSelectScrollUpDirective, 5);\n          i0.ɵɵcontentQuery(dirIndex, BrnSelectScrollDownDirective, 5);\n          i0.ɵɵcontentQuery(dirIndex, BrnSelectOptionDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollUpBtn = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollDownBtn = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._options = _t);\n        }\n      },\n      viewQuery: function BrnSelectContentComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewport = _t.first);\n        }\n      },\n      hostVars: 4,\n      hostBindings: function BrnSelectContentComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id() + \"--content\");\n          i0.ɵɵattribute(\"aria-labelledBy\", ctx.labelledBy())(\"aria-controlledBy\", ctx.id() + \"--trigger\")(\"dir\", ctx._selectService.dir());\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵHostDirectivesFeature([i1.CdkListbox]), i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c2,\n      decls: 9,\n      vars: 2,\n      consts: [[\"scrollUp\", \"\"], [\"viewport\", \"\"], [\"scrollDown\", \"\"], [4, \"ngTemplateOutlet\"], [\"data-brn-select-viewport\", \"\", 2, \"flex\", \"1 1 0%\", \"position\", \"relative\", \"width\", \"100%\", \"overflow\", \"auto\", \"min-height\", \"36px\", \"padding-bottom\", \"2px\", \"margin-bottom\", \"-2px\", 3, \"scroll\"]],\n      template: function BrnSelectContentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵtemplate(0, BrnSelectContentComponent_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(2, BrnSelectContentComponent_ng_container_2_Template, 1, 0, \"ng-container\", 3);\n          i0.ɵɵelementStart(3, \"div\", 4, 1);\n          i0.ɵɵlistener(\"scroll\", function BrnSelectContentComponent_Template_div_scroll_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.handleScroll());\n          });\n          i0.ɵɵprojection(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, BrnSelectContentComponent_ng_template_6_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor)(8, BrnSelectContentComponent_ng_container_8_Template, 1, 0, \"ng-container\", 3);\n        }\n        if (rf & 2) {\n          const scrollUp_r2 = i0.ɵɵreference(1);\n          const scrollDown_r3 = i0.ɵɵreference(7);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.canScrollUp() && ctx.scrollUpBtn ? scrollUp_r2 : null);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.canScrollDown() && ctx.scrollDownBtn ? scrollDown_r3 : null);\n        }\n      },\n      dependencies: [NgTemplateOutlet],\n      styles: [\"[_nghost-%COMP%]{display:flex;box-sizing:border-box;flex-direction:column;outline:none;pointer-events:auto}[data-brn-select-viewport][_ngcontent-%COMP%]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch}[data-brn-select-viewport][_ngcontent-%COMP%]::-webkit-scrollbar{display:none}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-select-content, hlm-select-content:not(noHlm)',\n      standalone: true,\n      imports: [BrnSelectScrollUpDirective, BrnSelectScrollDownDirective, NgTemplateOutlet],\n      hostDirectives: [CdkListbox],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[attr.aria-labelledBy]': 'labelledBy()',\n        '[attr.aria-controlledBy]': \"id() +'--trigger'\",\n        '[id]': \"id() + '--content'\",\n        '[attr.dir]': '_selectService.dir()'\n      },\n      template: `\n\t\t<ng-template #scrollUp>\n\t\t\t<ng-content select=\"hlm-select-scroll-up\" />\n\t\t\t<ng-content select=\"brnSelectScrollUp\" />\n\t\t</ng-template>\n\t\t<ng-container *ngTemplateOutlet=\"canScrollUp() && scrollUpBtn ? scrollUp : null\" />\n\t\t<div\n\t\t\tdata-brn-select-viewport\n\t\t\t#viewport\n\t\t\t(scroll)=\"handleScroll()\"\n\t\t\tstyle=\"flex: 1 1 0%;\n\t\t\tposition: relative;\n\t\t\twidth:100%;\n\t\t\toverflow:auto;\n\t\t\tmin-height: 36px;\n      padding-bottom: 2px;\n      margin-bottom: -2px;\"\n\t\t>\n\t\t\t<ng-content />\n\t\t</div>\n\t\t<ng-template #scrollDown>\n\t\t\t<ng-content select=\"brnSelectScrollDown\" />\n\t\t\t<ng-content select=\"hlm-select-scroll-down\" />\n\t\t</ng-template>\n\t\t<ng-container *ngTemplateOutlet=\"canScrollDown() && scrollDownBtn ? scrollDown : null\" />\n\t`,\n      styles: [\":host{display:flex;box-sizing:border-box;flex-direction:column;outline:none;pointer-events:auto}[data-brn-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch}[data-brn-select-viewport]::-webkit-scrollbar{display:none}\\n\"]\n    }]\n  }], () => [], {\n    viewport: [{\n      type: ViewChild,\n      args: ['viewport']\n    }],\n    scrollUpBtn: [{\n      type: ContentChild,\n      args: [BrnSelectScrollUpDirective, {\n        static: false\n      }]\n    }],\n    scrollDownBtn: [{\n      type: ContentChild,\n      args: [BrnSelectScrollDownDirective, {\n        static: false\n      }]\n    }],\n    _options: [{\n      type: ContentChildren,\n      args: [BrnSelectOptionDirective, {\n        descendants: true\n      }]\n    }]\n  });\n})();\nclass BrnSelectGroupDirective {\n  constructor() {\n    this.labelledBy = signal('');\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectGroupDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectGroupDirective)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnSelectGroupDirective,\n      selectors: [[\"\", \"brnSelectGroup\", \"\"]],\n      hostAttrs: [\"role\", \"group\"],\n      hostVars: 1,\n      hostBindings: function BrnSelectGroupDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-labelledby\", ctx.labelledBy());\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectGroup]',\n      standalone: true,\n      host: {\n        role: 'group',\n        '[attr.aria-labelledby]': 'labelledBy()'\n      }\n    }]\n  }], null, null);\n})();\nclass BrnSelectLabelDirective {\n  constructor() {\n    this.group = inject(BrnSelectGroupDirective, {\n      optional: true\n    });\n    this.label = inject(BrnLabelDirective, {\n      host: true\n    });\n    this.group?.labelledBy.set(this.label.id);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectLabelDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectLabelDirective)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnSelectLabelDirective,\n      selectors: [[\"\", \"brnSelectLabel\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵHostDirectivesFeature([i1$1.BrnLabelDirective])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectLabelDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectLabel]',\n      hostDirectives: [BrnLabelDirective],\n      standalone: true\n    }]\n  }], () => [], null);\n})();\nclass BrnSelectTriggerDirective {\n  constructor() {\n    this.el = inject(ElementRef);\n    this._selectService = inject(BrnSelectService);\n    this._ngControl = inject(NgControl, {\n      optional: true\n    });\n    this.isExpanded = this._selectService.isExpanded;\n    this.selectTriggerId = computed(() => `${this._selectService.id()}--trigger`);\n    this.selectContentId = computed(() => `${this._selectService.id()}--content`);\n    this.selectDisable = computed(() => this._selectService.disabled());\n    this.selectTriggerLabelledBy = computed(() => {\n      if (this._selectService.value() && this._selectService.value().length > 0) {\n        return `${this._selectService.labelId()} ${this._selectService.id()}--value`;\n      }\n      return this._selectService.labelId();\n    });\n    if (!this._selectService) return;\n    this._selectService._setSelectTrigger(this);\n  }\n  ngAfterViewInit() {\n    this._selectService.setTriggerWidth(this.el.nativeElement.offsetWidth);\n  }\n  focus() {\n    this.el.nativeElement.focus();\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectTriggerDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectTriggerDirective)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnSelectTriggerDirective,\n      selectors: [[\"\", \"brnSelectTrigger\", \"\"]],\n      hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"type\", \"button\"],\n      hostVars: 18,\n      hostBindings: function BrnSelectTriggerDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"disabled\", ctx.selectDisable());\n          i0.ɵɵattribute(\"id\", ctx.selectTriggerId())(\"aria-expanded\", ctx.isExpanded())(\"aria-controls\", ctx.selectContentId() + \"\")(\"aria-labelledBy\", ctx.selectTriggerLabelledBy())(\"dir\", ctx._selectService.dir());\n          i0.ɵɵclassProp(\"ng-invalid\", (ctx._ngControl == null ? null : ctx._ngControl.invalid) || null)(\"ng-dirty\", (ctx._ngControl == null ? null : ctx._ngControl.dirty) || null)(\"ng-valid\", (ctx._ngControl == null ? null : ctx._ngControl.valid) || null)(\"ng-touched\", (ctx._ngControl == null ? null : ctx._ngControl.touched) || null)(\"ng-untouched\", (ctx._ngControl == null ? null : ctx._ngControl.untouched) || null)(\"ng-pristine\", (ctx._ngControl == null ? null : ctx._ngControl.pristine) || null);\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectTriggerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectTrigger]',\n      standalone: true,\n      host: {\n        role: 'combobox',\n        '[attr.id]': 'selectTriggerId()',\n        '[disabled]': 'selectDisable()',\n        '[attr.aria-expanded]': 'isExpanded()',\n        '[attr.aria-controls]': \"selectContentId() + ''\",\n        '[attr.aria-labelledBy]': 'selectTriggerLabelledBy()',\n        'aria-autocomplete': 'none',\n        '[attr.dir]': '_selectService.dir()',\n        '[class.ng-invalid]': 'this._ngControl?.invalid || null',\n        '[class.ng-dirty]': 'this._ngControl?.dirty || null',\n        '[class.ng-valid]': 'this._ngControl?.valid || null',\n        '[class.ng-touched]': 'this._ngControl?.touched || null',\n        '[class.ng-untouched]': 'this._ngControl?.untouched || null',\n        '[class.ng-pristine]': 'this._ngControl?.pristine || null',\n        type: 'button'\n      }\n    }]\n  }], () => [], null);\n})();\nclass BrnSelectValueComponent {\n  constructor() {\n    this._selectService = inject(BrnSelectService);\n    this.id = computed(() => `${this._selectService.id()}--value`);\n    this.placeholder = computed(() => this._selectService.placeholder());\n    this.value = null;\n    this.transformFn = values => (values ?? []).join(', ');\n    const cdr = inject(ChangeDetectorRef);\n    // In certain cases (when using a computed signal for value) where the value of the select and the options are\n    // changed dynamically, the template does not update until the next frame. To work around this we can use a simple\n    // string variable in the template and manually trigger change detection when we update it.\n    toObservable(this._selectService.selectedOptions).pipe(takeUntilDestroyed()).subscribe(value => {\n      if (value.length === 0) {\n        this.value = null;\n        cdr.detectChanges();\n        return;\n      }\n      const selectedLabels = value.map(selectedOption => selectedOption?.getLabel());\n      if (this._selectService.dir() === 'rtl') {\n        selectedLabels.reverse();\n      }\n      const result = this.transformFn(selectedLabels);\n      this.value = result;\n      cdr.detectChanges();\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectValueComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectValueComponent)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: BrnSelectValueComponent,\n      selectors: [[\"brn-select-value\"], [\"hlm-select-value\"]],\n      hostVars: 1,\n      hostBindings: function BrnSelectValueComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id());\n        }\n      },\n      inputs: {\n        transformFn: \"transformFn\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 1,\n      template: function BrnSelectValueComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtext(0);\n        }\n        if (rf & 2) {\n          i0.ɵɵtextInterpolate1(\" \", ctx.value || ctx.placeholder(), \" \");\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1;white-space:nowrap;pointer-events:none}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectValueComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-select-value, hlm-select-value',\n      template: `\n\t\t{{ value || placeholder() }}\n\t`,\n      host: {\n        '[id]': 'id()'\n      },\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\":host{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1;white-space:nowrap;pointer-events:none}\\n\"]\n    }]\n  }], () => [], {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    transformFn: [{\n      type: Input\n    }]\n  });\n})();\nlet nextId = 0;\nclass BrnSelectComponent {\n  set multiple(multiple) {\n    this._selectService.state.update(state => ({\n      ...state,\n      multiple\n    }));\n  }\n  set placeholder(placeholder) {\n    this._selectService.state.update(state => ({\n      ...state,\n      placeholder\n    }));\n  }\n  set disabled(disabled) {\n    this._selectService.state.update(state => ({\n      ...state,\n      disabled\n    }));\n  }\n  constructor() {\n    this._selectService = inject(BrnSelectService);\n    this.triggerWidth = this._selectService.triggerWidth;\n    this._multiple = this._selectService.multiple;\n    this._placeholder = this._selectService.placeholder;\n    this._disabled = this._selectService.disabled;\n    this.dir = input('ltr');\n    this.options = contentChildren(CdkOption, {\n      descendants: true\n    });\n    this.options$ = toObservable(this.options);\n    this.optionsAndIndex$ = this.options$.pipe(map((options, index) => [options, index]));\n    this.openedChange = new EventEmitter();\n    this.closeDelay = input(100);\n    this.isExpanded = this._selectService.isExpanded;\n    this._delayedExpanded = toSignal(toObservable(this.isExpanded).pipe(switchMap(expanded => !expanded ? of(expanded).pipe(delay(this.closeDelay())) : of(expanded)), takeUntilDestroyed()), {\n      initialValue: false\n    });\n    this.state = computed(() => this.isExpanded() ? 'open' : 'closed');\n    this._positionChanges$ = new Subject();\n    this.side = toSignal(this._positionChanges$.pipe(map(change =>\n    // todo: better translation or adjusting hlm to take that into account\n    change.connectionPair.originY === 'center' ? change.connectionPair.originX === 'start' ? 'left' : 'right' : change.connectionPair.originY)), {\n      initialValue: 'bottom'\n    });\n    this.backupLabelId = computed(() => this._selectService.labelId());\n    this.labelProvided = signal(false);\n    this.ngControl = inject(NgControl, {\n      optional: true,\n      self: true\n    });\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onChange = () => {};\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this._onTouched = () => {};\n    this._shouldEmitValueChange = signal(false);\n    /*\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    this._positions = [{\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    }, {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top'\n    }, {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom'\n    }, {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom'\n    }];\n    this.defaultErrorStateMatcher = inject(ErrorStateMatcher);\n    this.parentForm = inject(NgForm, {\n      optional: true\n    });\n    this.parentFormGroup = inject(FormGroupDirective, {\n      optional: true\n    });\n    this.errorState = computed(() => this.errorStateTracker.errorState());\n    this.writeValue$ = new Subject();\n    this.handleOptionChanges();\n    this.handleInitialOptionSelect();\n    this._selectService.state.update(state => ({\n      ...state,\n      id: `brn-select-${nextId++}`\n    }));\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n    // Watch for Listbox Selection Changes to trigger Collapse and Value Change\n    this._selectService.listBoxValueChangeEvent$.pipe(takeUntilDestroyed()).subscribe(() => {\n      if (!this._multiple()) {\n        this.close();\n      }\n      // we set shouldEmitValueChange to true because we want to propagate the value change\n      // as a result of user interaction\n      this._shouldEmitValueChange.set(true);\n    });\n    /**\n     * Listening to value changes in order to trigger forms api on change\n     * ShouldEmitValueChange simply ensures we only propagate value change when a user makes a selection\n     * we don't propagate changes made from outside the component (ex. patch value or initial value from form control)\n     */\n    toObservable(this._selectService.value).subscribe(value => {\n      if (this._shouldEmitValueChange()) {\n        this._onChange(value ?? null);\n      }\n      this._shouldEmitValueChange.set(true);\n    });\n    toObservable(this.dir).subscribe(dir => this._selectService.state.update(state => ({\n      ...state,\n      dir\n    })));\n    this.errorStateTracker = new ErrorStateTracker(this.defaultErrorStateMatcher, this.ngControl, this.parentFormGroup, this.parentForm);\n  }\n  ngAfterContentInit() {\n    // Check if Label Directive Provided and pass to service\n    if (this.selectLabel) {\n      this.labelProvided.set(true);\n      this._selectService.state.update(state => ({\n        ...state,\n        labelId: this.selectLabel.id,\n        dir: this.dir()\n      }));\n    } else if (this._placeholder()) {\n      this._selectService.state.update(state => ({\n        ...state,\n        labelId: `${state.id}--label`,\n        dir: this.dir()\n      }));\n    }\n  }\n  ngDoCheck() {\n    this.errorStateTracker.updateErrorState();\n  }\n  toggle() {\n    if (this.isExpanded()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  open() {\n    if (!this._canOpen()) return;\n    this._selectService.state.update(state => ({\n      ...state,\n      isExpanded: true\n    }));\n    this.openedChange.next(true);\n    this._moveFocusToCDKList();\n  }\n  close() {\n    if (!this.isExpanded()) return;\n    if (this._selectService.selectTrigger) {\n      this._selectService.selectTrigger.focus();\n    }\n    this.openedChange.next(false);\n    this._selectService.state.update(state => ({\n      ...state,\n      isExpanded: false\n    }));\n    this._onTouched();\n  }\n  _canOpen() {\n    return !this.isExpanded() && !this._disabled() && this.options()?.length > 0;\n  }\n  _moveFocusToCDKList() {\n    setTimeout(() => this.selectContent.focusList());\n  }\n  writeValue(value) {\n    this.writeValue$.next(value);\n  }\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * Once writeValue is called and options are available we can handle setting the initial options\n   * @private\n   */\n  handleInitialOptionSelect() {\n    // Write value cannot be handled until options are available, so we wait until both are available with a combineLatest\n    combineLatest([this.writeValue$, this.options$]).pipe(map((values, index) => [...values, index]), takeUntilDestroyed()).subscribe(([value, _, index]) => {\n      this._shouldEmitValueChange.set(false);\n      this._selectService.setInitialSelectedOptions(value);\n      // the first time this observable emits a value we are simply setting the initial state\n      // this change should not count as changing the state of the select, so we need to mark as pristine\n      if (index === 0) {\n        this.ngControl?.control?.markAsPristine();\n      }\n    });\n  }\n  /**\n   * When options change, our current selected options may become invalid\n   * Here we will automatically update our current selected options so that they are always inline with the possibleOptions\n   * @private\n   */\n  handleOptionChanges() {\n    this.optionsAndIndex$.pipe(takeUntilDestroyed()).subscribe(([options, index]) => {\n      if (index > 0) {\n        this.handleInvalidOptions(options);\n      }\n      this.updatePossibleOptions(options);\n    });\n  }\n  /**\n   * Check that our \"selectedOptions\" are still valid when \"possibleOptions\" is about to be updated\n   */\n  handleInvalidOptions(options) {\n    const selectedOptions = this._selectService.selectedOptions();\n    const availableOptionSet = new Set(options);\n    if (this._selectService.multiple()) {\n      const filteredOptions = selectedOptions.filter(o => availableOptionSet.has(o));\n      // only update if there was an actual change\n      if (selectedOptions.length !== filteredOptions.length) {\n        // update should result in a value change since we are deselecting a value\n        this._shouldEmitValueChange.set(true);\n        const value = filteredOptions.map(o => o?.value ?? '');\n        this._selectService.state.update(state => ({\n          ...state,\n          selectedOptions: filteredOptions,\n          value: value\n        }));\n        this._onChange(value ?? null);\n      }\n    } else {\n      const selectedOption = selectedOptions[0] ?? null;\n      if (selectedOption !== null && !availableOptionSet.has(selectedOption)) {\n        this._shouldEmitValueChange.set(true);\n        this._selectService.state.update(state => ({\n          ...state,\n          selectedOptions: [],\n          value: ''\n        }));\n        this._onChange('');\n      }\n    }\n  }\n  /**\n   * Sync the updated options with \"possibleOptions\" in the select service\n   */\n  updatePossibleOptions(options) {\n    this._selectService.state.update(state => ({\n      ...state,\n      possibleOptions: options\n    }));\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function BrnSelectComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectComponent)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: BrnSelectComponent,\n      selectors: [[\"brn-select\"], [\"hlm-select\"]],\n      contentQueries: function BrnSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuerySignal(dirIndex, ctx.options, CdkOption, 5);\n          i0.ɵɵcontentQuery(dirIndex, BrnLabelDirective, 4);\n          i0.ɵɵcontentQuery(dirIndex, BrnSelectContentComponent, 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵqueryAdvance();\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectLabel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectContent = _t.first);\n        }\n      },\n      viewQuery: function BrnSelectComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n        }\n      },\n      inputs: {\n        multiple: \"multiple\",\n        placeholder: \"placeholder\",\n        disabled: \"disabled\",\n        dir: [1, \"dir\"],\n        closeDelay: [1, \"closeDelay\"]\n      },\n      outputs: {\n        openedChange: \"openedChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([BrnSelectService, CdkListbox, provideExposedSideProviderExisting(() => BrnSelectComponent), provideExposesStateProviderExisting(() => BrnSelectComponent), {\n        provide: BrnFormFieldControl,\n        useExisting: BrnSelectComponent\n      }]), i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c4,\n      decls: 6,\n      vars: 5,\n      consts: [[\"trigger\", \"cdkOverlayOrigin\"], [1, \"hidden\"], [\"cdk-overlay-origin\", \"\", 3, \"click\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"backdropClick\", \"detach\", \"positionChange\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayWidth\"]],\n      template: function BrnSelectComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c3);\n          i0.ɵɵtemplate(0, BrnSelectComponent_Conditional_0_Template, 2, 2, \"label\", 1)(1, BrnSelectComponent_Conditional_1_Template, 1, 0);\n          i0.ɵɵelementStart(2, \"div\", 2, 0);\n          i0.ɵɵlistener(\"click\", function BrnSelectComponent_Template_div_click_2_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.toggle());\n          });\n          i0.ɵɵprojection(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, BrnSelectComponent_ng_template_5_Template, 1, 0, \"ng-template\", 3);\n          i0.ɵɵlistener(\"backdropClick\", function BrnSelectComponent_Template_ng_template_backdropClick_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.close());\n          })(\"detach\", function BrnSelectComponent_Template_ng_template_detach_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.close());\n          })(\"positionChange\", function BrnSelectComponent_Template_ng_template_positionChange_5_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._positionChanges$.next($event));\n          });\n        }\n        if (rf & 2) {\n          const trigger_r3 = i0.ɵɵreference(3);\n          i0.ɵɵconditional(!ctx.labelProvided() && ctx._placeholder() ? 0 : 1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"cdkConnectedOverlayOrigin\", trigger_r3)(\"cdkConnectedOverlayOpen\", ctx._delayedExpanded())(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayWidth\", ctx.triggerWidth() > 0 ? ctx.triggerWidth() : \"auto\");\n        }\n      },\n      dependencies: [OverlayModule, i1$2.CdkConnectedOverlay, i1$2.CdkOverlayOrigin, CdkListboxModule],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-select, hlm-select',\n      standalone: true,\n      imports: [OverlayModule, BrnSelectTriggerDirective, CdkListboxModule],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [BrnSelectService, CdkListbox, provideExposedSideProviderExisting(() => BrnSelectComponent), provideExposesStateProviderExisting(() => BrnSelectComponent), {\n        provide: BrnFormFieldControl,\n        useExisting: BrnSelectComponent\n      }],\n      template: `\n\t\t@if (!labelProvided() && _placeholder()) {\n\t\t\t<label class=\"hidden\" [attr.id]=\"backupLabelId()\">{{ _placeholder() }}</label>\n\t\t} @else {\n\t\t\t<ng-content select=\"label[hlmLabel],label[brnLabel]\" />\n\t\t}\n\n\t\t<div cdk-overlay-origin (click)=\"toggle()\" #trigger=\"cdkOverlayOrigin\">\n\t\t\t<ng-content select=\"hlm-select-trigger,[brnSelectTrigger]\" />\n\t\t</div>\n\t\t<ng-template\n\t\t\tcdk-connected-overlay\n\t\t\tcdkConnectedOverlayLockPosition\n\t\t\tcdkConnectedOverlayHasBackdrop\n\t\t\tcdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n\t\t\t[cdkConnectedOverlayOrigin]=\"trigger\"\n\t\t\t[cdkConnectedOverlayOpen]=\"_delayedExpanded()\"\n\t\t\t[cdkConnectedOverlayPositions]=\"_positions\"\n\t\t\t[cdkConnectedOverlayWidth]=\"triggerWidth() > 0 ? triggerWidth() : 'auto'\"\n\t\t\t(backdropClick)=\"close()\"\n\t\t\t(detach)=\"close()\"\n\t\t\t(positionChange)=\"_positionChanges$.next($event)\"\n\t\t>\n\t\t\t<ng-content />\n\t\t</ng-template>\n\t`\n    }]\n  }], () => [], {\n    multiple: [{\n      type: Input,\n      args: [{\n        alias: 'multiple'\n      }]\n    }],\n    placeholder: [{\n      type: Input,\n      args: [{\n        alias: 'placeholder'\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'disabled'\n      }]\n    }],\n    selectLabel: [{\n      type: ContentChild,\n      args: [BrnLabelDirective, {\n        descendants: false\n      }]\n    }],\n    selectContent: [{\n      type: ContentChild,\n      args: [BrnSelectContentComponent]\n    }],\n    _overlayDir: [{\n      type: ViewChild,\n      args: [CdkConnectedOverlay]\n    }],\n    openedChange: [{\n      type: Output\n    }]\n  });\n})();\nconst BrnSelectImports = [BrnSelectComponent, BrnSelectContentComponent, BrnSelectTriggerDirective, BrnSelectOptionDirective, BrnSelectValueComponent, BrnSelectScrollDownDirective, BrnSelectScrollUpDirective, BrnSelectGroupDirective, BrnSelectLabelDirective];\nclass BrnSelectModule {\n  /** @nocollapse */static {\n    this.ɵfac = function BrnSelectModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrnSelectModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BrnSelectModule,\n      imports: [BrnSelectComponent, BrnSelectContentComponent, BrnSelectTriggerDirective, BrnSelectOptionDirective, BrnSelectValueComponent, BrnSelectScrollDownDirective, BrnSelectScrollUpDirective, BrnSelectGroupDirective, BrnSelectLabelDirective],\n      exports: [BrnSelectComponent, BrnSelectContentComponent, BrnSelectTriggerDirective, BrnSelectOptionDirective, BrnSelectValueComponent, BrnSelectScrollDownDirective, BrnSelectScrollUpDirective, BrnSelectGroupDirective, BrnSelectLabelDirective]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BrnSelectComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [...BrnSelectImports],\n      exports: [...BrnSelectImports]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrnSelectComponent, BrnSelectContentComponent, BrnSelectGroupDirective, BrnSelectImports, BrnSelectLabelDirective, BrnSelectModule, BrnSelectOptionDirective, BrnSelectScrollDownDirective, BrnSelectScrollUpDirective, BrnSelectService, BrnSelectTriggerDirective, BrnSelectValueComponent };\n"],
  "mappings": "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",
  "names": ["skip", "nextId", "nextId"]
}
